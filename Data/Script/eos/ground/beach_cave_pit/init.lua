--[[
    init.lua
    Created: 12/13/2023 20:43:47
    Description: Autogenerated script file for the map beach_cave_pit.
]]--
-- Commonly included lua functions and data
require 'eos.common'
require 'eos.CharacterActions'

-- Package name
local beach_cave_pit = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---beach_cave_pit.Init(map)
--Engine callback function
function beach_cave_pit.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  
  
  COMMON:RespawnAllies()

end

---beach_cave_pit.Enter(map)
--Engine callback function
function beach_cave_pit.Enter(map)

  GAME:CutsceneMode(true)

  if SV.Progression.Chapter == 1 then
	
	if SV.Progression.SectionFlag == 1 then
		--defeated boss
		beach_cave_pit.BossDefeated()
	elseif SV.beach_cave.FailedBoss then
		--reentry dialogue
		beach_cave_pit.BossReEntry()
	else
		--normal dialogue
		beach_cave_pit.EncounterBoss()
	end
	
	--rest of the cutscene continues as normal
  else
	--nothing left, time to go back
	beach_cave_pit.NothingHere()
  end

  if not SV.Progression.Chapter == 1 then

	beach_cave_pit.NothingHere()
  end	

end

---beach_cave_pit.Exit(map)
--Engine callback function
function beach_cave_pit.Exit(map)


end

---beach_cave_pit.Update(map)
--Engine callback function
function beach_cave_pit.Update(map)


end

---beach_cave_pit.GameSave(map)
--Engine callback function
function beach_cave_pit.GameSave(map)


end

---beach_cave_pit.GameLoad(map)
--Engine callback function
function beach_cave_pit.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------


-------------------------------
-- Cutscene Functions
-------------------------------

function beach_cave_pit.NothingHere()
	--DO THIS LATER
	UI:WaitShowTitle(GAME:GetCurrentGround().Name:ToLocal(), 20)
	GAME:WaitFrames(30)
	UI:WaitHideTitle(20)
  
	GAME:WaitFrames(30)
  
	SOUND:PlayBGM("006 - In the Depths of the Pit.ogg", true)
	GAME:FadeIn(20)
	GAME:CutsceneMode(false)
	GAME:EndDungeonRun(RogueEssence.Data.GameProgress.ResultType.Cleared, "hub", -1, 5, 3, true, true)
	GAME:EnterZone('hub', -1, 5, GuildHallwayEntranceMarker) --Time to do this lol, gameplay loop achieved
end

function beach_cave_pit.EncounterBoss()
	local player = CH('PLAYER')
	local partner = CH('PARTNER')
	local koffing = CH('Koffing')
	local zubat = CH('Zubat')
	
	partner.CollisionDisabled = true
	
	local hTalkKind = SV.Personality.HeroTalkKind
	local pTalkKind = SV.Personality.PartnerTalkKind
	
	local cam = MRKR('Camera')
	GAME:MoveCamera(cam.Position.X, cam.Position.Y, 1, false)
	
	UI:WaitShowTitle(GAME:GetCurrentGround().Name:ToLocal(), 20)
	GAME:WaitFrames(30)
	UI:WaitHideTitle(20)
  
	GAME:WaitFrames(30)
  
	SOUND:PlayBGM("006 - In the Depths of the Pit.ogg", true)
	GAME:FadeIn(20)
	
	local coro1 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(partner, koffing.Position.X, koffing.Position.Y + 52, false, 1) end) 
	local coro2 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(player, zubat.Position.X, koffing.Position.Y + 48, false, 1) end)
	TASK:JoinCoroutines({coro1, coro2})
	
	GAME:WaitFrames(15)
	
	UI:SetSpeaker(partner)
	UI:SetSpeakerEmotion("Determined")
	
	local coro1 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(partner, koffing.Position.X, koffing.Position.Y + 44, false, 1)
												CharacterActions.HopTwice(partner, Direction.Up) end) 
	local coro2 = TASK:BranchCoroutine(function() UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Partner_1_'..tostring(pTalkKind)])) end)
	TASK:JoinCoroutines({coro1, coro2})
	
	SOUND:PlayBattleSE("EVT_Emote_Exclaim")
	GROUND:CharSetEmote(koffing, "exclaim", 1)
	GROUND:CharSetEmote(zubat, "exclaim", 1)
	GAME:WaitFrames(30)
	
	local coro1 = TASK:BranchCoroutine(function() GROUND:CharAnimateTurnTo(koffing, Direction.Down, 4) end) 
	local coro2 = TASK:BranchCoroutine(function() GROUND:CharAnimateTurnTo(zubat, Direction.Down, 4) end)
	TASK:JoinCoroutines({coro1, coro2})
	
	GAME:WaitFrames(20)
	
	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Koffing_1']))
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Koffing_2']))
	
	GAME:WaitFrames(10)
	
	GROUND:AnimateToPosition(partner, "Walk", Direction.Up, koffing.Position.X, koffing.Position.Y + 52, 1, 1, 0)
	UI:SetSpeaker(partner)
	UI:SetSpeakerEmotion("Pain")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Partner_2']))
	
	GAME:WaitFrames(15)
	
	GROUND:MoveToPosition(partner, koffing.Position.X, koffing.Position.Y + 44, false, 1)
	UI:SetSpeakerEmotion("Shouting")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Partner_3']))
	CharacterActions.HopTwice(partner, Direction.Up)
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Partner_4']))
	
	GAME:WaitFrames(10)
	UI:SetSpeaker(zubat)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Zubat_1']))
	
	GAME:WaitFrames(10)
	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Koffing_3']))
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Koffing_4']))
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Koffing_5']))
	
	SOUND:PlayBattleSE("EVT_Emote_Shock")
	GROUND:CharSetEmote(koffing, "glowing", -1)
	GROUND:CharSetEmote(partner, "shock", 1)
	
	GAME:WaitFrames(10)
	GROUND:AnimateToPosition(partner, "Walk", Direction.Up, koffing.Position.X, koffing.Position.Y + 48, 1, 1, 0)
	UI:SetSpeaker(partner)
	UI:SetSpeakerEmotion("Surprised")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Partner_5_'..tostring(pTalkKind)]))
	
	GAME:WaitFrames(10)
	GROUND:CharSetEmote(koffing, "none", 1)
	UI:SetSpeaker(zubat)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S1_Zubat_2']))
	
	COMMON.BossTransition(false)
	GAME:CutsceneMode(false)
	GAME:ContinueDungeon('beach_cave', 1, 0, 0)
	
end

function beach_cave_pit.BossReEntry()
	local player = CH('PLAYER')
	local partner = CH('PARTNER')
	local koffing = CH('Koffing')
	local zubat = CH('Zubat')
	
	partner.CollisionDisabled = true
	
	local hTalkKind = SV.Personality.HeroTalkKind
	local pTalkKind = SV.Personality.PartnerTalkKind
	
	local cam = MRKR('Camera')
	GAME:MoveCamera(cam.Position.X, cam.Position.Y, 1, false)
	
	UI:WaitShowTitle(GAME:GetCurrentGround().Name:ToLocal(), 20)
	GAME:WaitFrames(30)
	UI:WaitHideTitle(20)
  
	GAME:WaitFrames(30)
  
	SOUND:PlayBGM("006 - In the Depths of the Pit.ogg", true)
	GAME:FadeIn(20)
	
	local coro1 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(partner, koffing.Position.X, koffing.Position.Y + 48, false, 1) end) 
	local coro2 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(player, zubat.Position.X, koffing.Position.Y + 48, false, 1) end)
	TASK:JoinCoroutines({coro1, coro2})
	
	GAME:WaitFrames(15)
	
	SOUND:PlayBattleSE("EVT_Emote_Confused")
	GROUND:CharSetEmote(partner, "question", 1)
	GAME:WaitFrames(30)
	
	UI:SetSpeaker(partner)
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Partner_1_'..tostring(pTalkKind)]))
	
	SOUND:PlayBattleSE("EVT_Emote_Exclaim")
	GROUND:CharSetEmote(koffing, "exclaim", 1)
	GROUND:CharSetEmote(zubat, "exclaim", 1)
	GAME:WaitFrames(30)
	
	local coro1 = TASK:BranchCoroutine(function() GROUND:CharAnimateTurnTo(koffing, Direction.Down, 4) end) 
	local coro2 = TASK:BranchCoroutine(function() GAME:WaitFrames(5)
												GROUND:CharAnimateTurnTo(zubat, Direction.Down, 4) end)
	TASK:JoinCoroutines({coro1, coro2})
	
	GAME:WaitFrames(15)
	
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Partner_2_'..tostring(pTalkKind)]))
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Partner_3_'..tostring(pTalkKind)]))
	
	SOUND:PlayBattleSE("EVT_Emote_Sweating")
    GROUND:CharSetEmote(koffing, "sweating", 1)
	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Koffing_1']))
	
	GAME:WaitFrames(10)
	UI:SetSpeaker(zubat)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Zubat_1']))
	
	SOUND:PlayBattleSE("EVT_Emote_Shock_2")
	GROUND:CharSetEmote(player, "shock", 1)
	GROUND:CharSetEmote(partner, "shock", 1)
	GAME:WaitFrames(30)
	
	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Koffing_2']))
	
	GAME:WaitFrames(10)
	UI:SetSpeaker(zubat)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Zubat_2']))
	
	GAME:WaitFrames(10)
	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S2_Koffing_3']))
	
	COMMON.BossTransition(false)
	GAME:CutsceneMode(false)
	GAME:ContinueDungeon('beach_cave', 1, 0, 0)
end

function beach_cave_pit.BossDefeated()
	local player = CH('PLAYER')
	local partner = CH('PARTNER')
	local koffing = CH('Koffing')
	local zubat = CH('Zubat')
	
	partner.CollisionDisabled = true
	
	local hTalkKind = SV.Personality.HeroTalkKind
	local pTalkKind = SV.Personality.PartnerTalkKind
	
	local cam = MRKR('Camera')
	GAME:MoveCamera(cam.Position.X, cam.Position.Y, 1, false)
	
	GROUND:TeleportTo(partner, koffing.Position.X, koffing.Position.Y + 48, Direction.Up)
	GROUND:TeleportTo(player, zubat.Position.X, koffing.Position.Y + 48, Direction.Up)
	GROUND:CharAnimateTurnTo(koffing, Direction.Down, 4)
	GROUND:CharAnimateTurnTo(zubat, Direction.Down, 4)
	--GROUND:CharSetAnim(koffing, "Laying", true)
	--GROUND:CharSetAnim(zubat, "Laying", true)
	SOUND:PlayBGM("006 - In the Depths of the Pit.ogg", true)
	GAME:FadeIn(20)
	
	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	GROUND:CharSetEmote(koffing, "sweating", 1)
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Koffing_1']))
	
	UI:SetSpeaker(zubat)
	UI:SetSpeakerEmotion("Normal")
	GROUND:CharSetEmote(zubat, "sweating", 1)
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Zubat_1']))
	
	GAME:FadeOut(false, 1)	
	GAME:FadeIn(10)
	--GROUND:CharSetAnim(koffing, "Normal", true)
	--GROUND:CharSetAnim(zubat, "Normal", true)

	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Koffing_2']))
	
	UI:SetSpeaker(zubat)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Zubat_2']))

	GROUND:CharAnimateTurnTo(zubat, Direction.DownLeft, 4)
	--animate the relic fragement later
	local relic = OBJ('RelicFragment')
	GROUND:TeleportTo(relic, zubat.Position.X + 8, zubat.Position.Y + 12, Direction.Down) --relic fragment
	GROUND:MoveObjectToPosition(relic, zubat.Position.X - 24, zubat.Position.Y + 16, 4)
	GAME:WaitFrames(10)
	GROUND:MoveObjectToPosition(relic, zubat.Position.X - 24, zubat.Position.Y + 24, 4)
	GAME:WaitFrames(10)
	GROUND:MoveObjectToPosition(relic, zubat.Position.X - 24, zubat.Position.Y + 28, 4)
	GAME:WaitFrames(10)
	GROUND:MoveObjectToPosition(relic, zubat.Position.X - 24, zubat.Position.Y + 32, 4)
	
	GROUND:CharAnimateTurnTo(player, Direction.UpLeft, 4)
	GROUND:CharAnimateTurnTo(partner, Direction.UpRight, 4)
	GROUND:CharSetEmote(partner, "notice", 1)
	GROUND:CharAnimateTurnTo(zubat, Direction.Down, 4)

	UI:SetSpeaker(koffing)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Koffing_3']))

	GROUND:CharAnimateTurnTo(partner, Direction.Up, 4)
	GROUND:CharAnimateTurnTo(player, Direction.Up, 4)
	
	UI:SetSpeaker(zubat)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Zubat_3']))
	
	--insert funny sound here
	GROUND:MoveInDirection(koffing, Direction.DownLeft, 20, false, 2)
	GROUND:MoveInDirection(zubat, Direction.DownRight, 20, false, 2)

	GROUND:CharAnimateTurnTo(partner, Direction.UpLeft, 4)
        GROUND:CharAnimateTurnTo(player, Direction.UpRight, 4)

	GROUND:MoveInDirection(koffing, Direction.Down, 32, false, 2)
	GROUND:MoveInDirection(zubat, Direction.Down, 32, false, 2)

	GROUND:CharAnimateTurnTo(partner, Direction.Left, 4)
        GROUND:CharAnimateTurnTo(player, Direction.Right, 4)

	GROUND:MoveInDirection(koffing, Direction.Down, 32, false, 2)
	GROUND:MoveInDirection(zubat, Direction.Down, 32, false, 2)

	GROUND:CharAnimateTurnTo(partner, Direction.DownLeft, 4)
        GROUND:CharAnimateTurnTo(player, Direction.DownRight, 4)

	GROUND:MoveInDirection(koffing, Direction.Down, 32, false, 2)
	GROUND:MoveInDirection(zubat, Direction.Down, 32, false, 2)

	GROUND:CharAnimateTurnTo(partner, Direction.Down, 4)
        GROUND:CharAnimateTurnTo(player, Direction.Down, 4)

	GROUND:CharAnimateTurnTo(partner, Direction.UpRight, 4)
        GROUND:CharAnimateTurnTo(player, Direction.UpLeft, 4)

	GROUND:MoveInDirection(partner, Direction.UpRight, 5, false, 2)

	UI:SetSpeaker(partner)
	UI:SetSpeakerEmotion("Happy")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Partner_1']))

	GROUND:MoveInDirection(partner, Direction.UpRight, 5, false, 2)
	GROUND:Hide("RelicFragment")
	--SOUND:PlayBattleSE("EVT_CH02_Item_PickUp") --correct sound goes here
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Partner_2_'..tostring(pTalkKind)]))
	GROUND:CharAnimateTurnTo(partner, Direction.DownRight, 4)
	UI:SetSpeakerEmotion("Inspired")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Partner_3_'..tostring(pTalkKind)], player:GetDisplayName()))
	CharacterActions.ScaredJump(partner, Direction.DownRight)
	UI:SetSpeakerEmotion("Happy")
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['S3_Partner_4_'..tostring(pTalkKind)], player:GetDisplayName()))
	GAME:FadeOut(false, 1)
	GAME:WaitFrames(30)
	GAME:CutsceneMode(false)
	GAME:EndDungeonRun(RogueEssence.Data.GameProgress.ResultType.Cleared, "cutscenes", -1, 6, 0, true, true)	
	GAME:EnterZone("cutscenes", -1, 6, 0)	
end

return beach_cave_pit

